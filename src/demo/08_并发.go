package main

/*
程序：编译形成的二进制文件，只是占用磁盘空间
程序：进程 == 1：n
孤儿进程：父进程先于子进程结束，子进程的父进程成为init进程，成为init进程领养孤儿进程
僵尸进程：进程终止，父进程尚未回收，子进程残留资源（pcb）存放于内核中，编程僵尸进程
*/

/*
Go从语言层面就支持并发，同时，并发程序的内存管理有时候是非常复杂的，而Go语言提供了自动垃圾回收机制
Go语言为并发编程而内置的生成API基于顺序通信进程模型CSP，这就意味着显示锁都是可以避免的，因为Go英国相对安全的通道发送和接收数据以实现同步，大大简化了并发程序的编写
Go语言中，并发程序主要是用两种手段实现，--goroutine  &&  channel
*/

/*
并发---好处
	进程：稳定性强，开销大
	线程：节省资源
	协程：效率高
*/
